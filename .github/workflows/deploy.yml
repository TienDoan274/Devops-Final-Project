name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  code-analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env: 
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        with:
          project: 'Microservices'
          path: '.'
          format: 'HTML'
          args: >
            --enableRetired
            --scan .

      - name: Upload OWASP Results
        uses: actions/upload-artifact@v3
        with:
          name: OWASP Dependency Check Report
          path: ${{ github.workspace }}/reports

  trivy-file-scan:
    name: Trivy File Scan
    needs: code-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy filesystem scan
        run: trivy fs --exit-code 1 --severity CRITICAL .

  build-push:
    name: Build and Push Docker Images
    needs: trivy-file-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push order service
        uses: docker/build-push-action@v4
        with:
          context: ./order-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/order:latest

      - name: Build and push user service
        uses: docker/build-push-action@v4
        with:
          context: ./user-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/user:latest

      - name: Build and push product service
        uses: docker/build-push-action@v4
        with:
          context: ./product-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/product:latest

  trivy-image-scan:
    name: Trivy Image Scan
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Scan Docker images
        run: |
          trivy image --exit-code 1 --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          trivy image --exit-code 1 --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/order:latest
          trivy image --exit-code 1 --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/user:latest
          trivy image --exit-code 1 --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/product:latest

  deploy:
    name: Deploy to EKS
    needs: trivy-image-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name my-cluster-name

      - name: Deploy to EKS
        run: |
          kubectl apply -f ./kubernetes
          kubectl set image deployment/frontend-deployment frontend=${{ secrets.DOCKER_USERNAME }}/frontend:latest
          kubectl set image deployment/order-api-deployment order-api=${{ secrets.DOCKER_USERNAME }}/order:latest
          kubectl set image deployment/product-api-deployment product-api=${{ secrets.DOCKER_USERNAME }}/product:latest
          kubectl set image deployment/user-api-deployment user-api=${{ secrets.DOCKER_USERNAME }}/user:latest