name: Deploy to AWS EKS with SonarQube and Trivy Scanning

on:
  push:
    branches:
      - main
env:
  TAG: ${GITHUB_SHA::7}-$(date +'%Y%m%d-%H%M%S')
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v4
        env: 
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

  trivyFileScan:
    name: Trivy Scan Files
    needs: sonarqube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.22.0/trivy_0.22.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.22.0_Linux-64bit.deb
      - name: Run Trivy scan
        run: trivy fs --severity CRITICAL .

  dockerBuildPush:
    name: Build and Push Docker Images
    needs: sonarqube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${TAG} ./frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/order:${TAG} ./order-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user:${TAG} ./user-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product:${TAG} ./product-service
      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/order:${TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/user:${TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/product:${TAG}

  trivyImageScan:
    name: Trivy Scan Docker Images
    needs: dockerBuildPush
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.22.0/trivy_0.22.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.22.0_Linux-64bit.deb
      - name: Scan Docker images
        run: |
          trivy image --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          trivy image --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/order:latest
          trivy image --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/user:latest
          trivy image --severity CRITICAL ${{ secrets.DOCKER_USERNAME }}/product:latest

  deployToEKS:
    name: Deploy to AWS EKS
    needs: trivyImageScan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name my-cluster-name
      - name: Create env file
        run: |
          echo "TAG=${TAG}" > kubernetes/deployment.env
      - name: Deploy to EKS
        run: |
          # Export biến môi trường từ file
          export $(cat kubernetes/deployment.env | xargs)
          
          # Thay thế biến môi trường trong manifest files
          for file in kubernetes/*-deployment.yaml; do
            envsubst < "$file" > "${file}.tmp" && mv "${file}.tmp" "$file"
          done
          
          # Apply manifests
          kubectl apply -f kubernetes/